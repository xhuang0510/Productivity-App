[{"C:\\Users\\avidi\\OneDrive\\Documents\\GitHub\\prod-app\\Productivity-App\\src\\index.js":"1","C:\\Users\\avidi\\OneDrive\\Documents\\GitHub\\prod-app\\Productivity-App\\src\\App.js":"2","C:\\Users\\avidi\\OneDrive\\Documents\\GitHub\\prod-app\\Productivity-App\\src\\reportWebVitals.js":"3","C:\\Users\\avidi\\OneDrive\\Documents\\GitHub\\prod-app\\Productivity-App\\src\\Menus.js":"4","C:\\Users\\avidi\\OneDrive\\Documents\\GitHub\\prod-app\\Productivity-App\\src\\Displays.js":"5","C:\\Users\\avidi\\OneDrive\\Documents\\GitHub\\prod-app\\Productivity-App\\src\\Components.js":"6"},{"size":521,"mtime":1614631991536,"results":"7","hashOfConfig":"8"},{"size":4748,"mtime":1616800186064,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1614630084888,"results":"10","hashOfConfig":"8"},{"size":4329,"mtime":1616797229132,"results":"11","hashOfConfig":"8"},{"size":4989,"mtime":1616619356302,"results":"12","hashOfConfig":"8"},{"size":12138,"mtime":1616801390676,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"g36ha5",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\avidi\\OneDrive\\Documents\\GitHub\\prod-app\\Productivity-App\\src\\index.js",[],["28","29"],"C:\\Users\\avidi\\OneDrive\\Documents\\GitHub\\prod-app\\Productivity-App\\src\\App.js",[],"C:\\Users\\avidi\\OneDrive\\Documents\\GitHub\\prod-app\\Productivity-App\\src\\reportWebVitals.js",[],"C:\\Users\\avidi\\OneDrive\\Documents\\GitHub\\prod-app\\Productivity-App\\src\\Menus.js",[],"C:\\Users\\avidi\\OneDrive\\Documents\\GitHub\\prod-app\\Productivity-App\\src\\Displays.js",["30"],"import React, { Component } from 'react'; //import React Component\r\nimport Clock from 'react-live-clock';\r\nimport { Inject, ScheduleComponent, Day, Week, ViewsDirective, ViewDirective, DragAndDrop, ExcelExport, Resize } from \"@syncfusion/ej2-react-schedule\"\r\nimport { Button } from 'react-bootstrap';\r\nimport { StickyNoteList, NewNoteButton } from \"./Components\"\r\nimport \"./css/index.css\";\r\n// import styles from \"./css/material-dark.css\"\r\n\r\nexport class AccountInfoDisplay extends Component {\r\n    // Stores the state of this component and inherits properties from parent\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timezone: \"Pacific\"\r\n        }\r\n    }\r\n\r\n    // Renders the component\r\n    // Whenever you change state, the component re-renders\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"accountLayout\">\r\n                    <div className=\"clock\">\r\n                        <Clock format={'LT'} ticking={true} />\r\n                    </div>\r\n\r\n                    <button className=\"menu-buttons\" id=\"login-button\">Login</button>   \r\n                    <button className=\"menu-buttons\" id=\"logout-button\">Logout</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class StickyNotesSection extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            i: 0\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <StickyNoteList \r\n                     updateStickyNotes={this.props.updateStickyNotes} \r\n                     stickyNotes={this.props.stickyNotes} >\r\n                </StickyNoteList>\r\n                <NewNoteButton \r\n                     updateStickyNotes={this.props.updateStickyNotes} \r\n                     stickyNotes={this.props.stickyNotes}>\r\n                </NewNoteButton>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class ScheduleUI extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.mounted = false;\r\n        // Saves data automatically every 60 seconds while component is active\r\n        this.interval = setInterval(() => {\r\n            if(this.mounted) {\r\n                this.saveData();\r\n            }\r\n        }, 60000);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    onActionBegin(args) {\r\n        if (args.requestType === 'toolbarItemRendering') {\r\n            let exportItem = {\r\n                align: 'Right', showTextOn: 'Both', prefixIcon: 'e-icon-schedule-excel-export',\r\n                text: 'Excel Export', cssClass: 'e-excel-export', click: this.onExportClick.bind(this)\r\n            };\r\n            args.items.push(exportItem);\r\n        }\r\n    }\r\n\r\n    onExportClick() {\r\n        this.scheduleObj.exportToExcel();\r\n    }\r\n\r\n    saveData = () => {\r\n        let newData = this.scheduleObj.dataModule.dataManager.dataSource.json;\r\n        this.props.update(newData);\r\n        console.log(\"Data saved!\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"scheduleSection\">\r\n                <ScheduleComponent cssClass='excel-export' width=\"100%\" height=\"100vh\" ref={t => this.scheduleObj = t} id='schedule'\r\n                                    actionBegin={this.onActionBegin.bind(this)} eventSettings={{ dataSource: this.props.schedule }}>\r\n                    <ViewsDirective>\r\n                        <ViewDirective option='Day'/>\r\n                        <ViewDirective option='Week'/>\r\n                    </ViewsDirective>\r\n                    <Inject services={[Day, Week, DragAndDrop, ExcelExport, Resize]}></Inject>\r\n                </ScheduleComponent>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class StatsUI extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>These are stats</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class AchievementsUI extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Achievements</h1> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class OptionsUI extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Options</h1> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class AboutUI extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>About</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\avidi\\OneDrive\\Documents\\GitHub\\prod-app\\Productivity-App\\src\\Components.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":4,"column":10,"nodeType":"37","messageId":"38","endLine":4,"endColumn":16},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]